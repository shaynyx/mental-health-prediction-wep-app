import pickle
import streamlit as st
from sklearn.preprocessing import  MinMaxScaler
# from streamlit_option_menu import option_menu

# loading the saved models

mental_health_model = pickle.load(open('mental_health_pickle.sav', 'rb'))
st.title('Do you want to find out if you need help? Find out by answering few questions')


# mental_health_model = pickle.load(open('mental_health_pickle.sav', 'rb'))


# AGE
scaler_filename = 'scaler.sav'
loaded_scaler = pickle.load(open(scaler_filename, 'rb'))
new_age = st.number_input("Enter your age", value=None, placeholder="Age...")
scaled_age = loaded_scaler.transform([[new_age]])
# st.write(f"Scaled Age: {scaled_age[0][0]}")


# GENDER
gender_options=['female', 'male', 'trans']
gender = st.radio(
    "Select your Gender",
    gender_options
)
gender_index=gender_options.index(gender)
# st.write(f"Index of the selected gender is: {gender_index}")


# FAMILY HISTORY 
familyhistory_options=['No', 'Yes']
familyhistory = st.radio(
    "Do you have a family history of mental illness?",
    familyhistory_options
)
familyhistory_index=familyhistory_options.index(familyhistory)
# st.write(f"Index of the selected family history is: {familyhistory_index}")


# BENEFITS
benefits_options=["Don't know", 'No', 'Yes']
benefits = st.radio(
    "Does your employer provide mental health benefits?",
    benefits_options
)
benefits_index=benefits_options.index(benefits)
# st.write(f"Index of the selected benefits is: {benefits_index}")


# CARE OPTIONS
careoptions_options=['No', 'Not sure', 'Yes']
careoptions = st.radio(
    "Do you know the options for mental health care your employer provides??",
    careoptions_options
)
careoptions_index=careoptions_options.index(careoptions)
# st.write(f"Index of the selected careoptions is: {careoptions_index}")


# ANONYMITY
anonymity_options=["Don't know", 'No', 'Yes']
anonymity = st.radio(
    "Is your anonymity protected if you choose to take advantage of mental health or substance abuse treatment resources?",
    anonymity_options
)
anonymity_index=anonymity_options.index(anonymity)
# st.write(f"Index of the selected anonymity is: {anonymity_index}")


# LEAVE
leave_options= ["Don't know", 'Somewhat difficult', 'Somewhat easy', 'Very difficult', 'Very easy']
leave = st.radio(
    "How easy is it for you to take medical leave for a mental health condition?",
    leave_options
)
leave_index=leave_options.index(leave)
# st.write(f"Index of the selected leave is: {leave_index}")


# WORK INTERFERE
workinterfere_options= ["Don't know", 'Never', 'Often', 'Rarely', 'Sometimes']
workinterfere = st.radio(
    "If you have a mental health condition, do you feel that it interferes with your work?",
    workinterfere_options
)
workinterfere_index=workinterfere_options.index(workinterfere)
# st.write(f"Index of the selected work interfere is: {workinterfere_index}")


# BUTTON 
if st.button('Check'):
    user_input=[scaled_age[0][0],gender_index,familyhistory_index,benefits_index,careoptions_index,anonymity_index,leave_index,workinterfere_index]
    mental_health_prediction = mental_health_model.predict([user_input])
    # st.write(f"{mental_health_prediction[0]}")
    if mental_health_prediction[0]== 1:
        mental_health_diagnosis = 'You may require assitance reguarding your mental health, please reach out to someone for help, talking about your problems with others may often help you out. '
    else:
        mental_health_diagnosis = 'You look like your doing well! Keep up the good work ðŸ˜€'
    # st.write(mental_health_diagnosis)
    st.subheader(mental_health_diagnosis, divider='rainbow')
    st.write("Please be advised that the predictions presented here are generated by a machine learning model and may not be entirely accurate. For a more precise evaluation, we recommend consulting with a mental health professional.")